# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.

[project]
name = "traefik-k8s-operator"
version = "0.1.0"
description = "Kubernetes operator for Traefik, managed by Juju."
authors = ["Canonical Ltd."]
requires-python = "~=3.8"

dependencies = [
    "cryptography",
    "deepmerge",
    "jsonschema",
    "lightkube >= 0.8.1",
    "lightkube-models >= 1.22.0.4",
    "lightkube-extensions",
    "ops >= 2.10.0",
    "importlib-metadata == 6.0.0",
    "opentelemetry-exporter-otlp-proto-http == 1.21.0",
    "opentelemetry-api == 1.21.0",
    "pydantic >= 2",
    "cosl"
]

[project.optional-dependencies]
dev = [
    "black",
    "ruff",
    "codespell",
    "pytest-subtests",
    "coverage[toml]",
    "ipdb",
    "pytest==8.2.2",
    "pytest-asyncio==0.21.2",
    "pytest-operator",
    "juju",
    "tenacity==8.3.0",
    "sh",
    "minio",
    "pyright==1.1.318",
    "ops-scenario~=6.0",
    "pytest-interface-tester > 0.3"
]

[tool.uv.sources]
lightkube-extensions = { git = "https://github.com/canonical/lightkube-extensions.git", rev = "main" }

# Testing tools configuration
[tool.coverage.run]
branch = true

[tool.coverage.report]
show_missing = true

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
asyncio_mode = "auto"
markers = [
    "setup: tests that mutate the model topology by adding stuff (deselect with '-m \"not setup\"')",
    "teardown: tests that mutate the model topology by removing stuff (deselect with '-m \"not teardown\"')",
]

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py38"]

# Linting tools configuration
[tool.ruff]
line-length = 99
extend-exclude = ["__pycache__", "*.egg_info"]

[tool.ruff.lint]
select = ["E", "W", "F", "C", "N", "R", "D", "I001"]
# Ignore E501 because using black creates errors with this
# Ignore D107 Missing docstring in __init__
ignore = ["E501", "D107", "N818", "RET504"]
# D100, D101, D102, D103: Ignore missing docstrings in tests
per-file-ignores = {"*tests/*" = ["D100","D101","D102","D103","D104"]}

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
reportTypedDictNotRequiredAccess = false
extraPaths = ["lib"]
pythonVersion = "3.8"
pythonPlatform = "All"

[tool.codespell]
skip = ".git,.tox,build,venv*"

